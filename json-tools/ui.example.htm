<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JSONMagic - 优雅的JSON工具</title>
    <style>
        :root {
            --bg-primary: #1a1c24;
            --bg-secondary: #222632;
            --bg-tertiary: #2a2e3c;
            --text-primary: #e0e6ff;
            --text-secondary: #b0b5cc;
            --accent-primary: #8c6dff;
            --accent-secondary: #6a4dff;
            --success: #4caf50;
            --error: #ff5252;
            --warning: #ffb142;
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            line-height: 1.6;
            overflow-x: hidden;
        }

        /* 滚动条样式 */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: var(--bg-secondary);
        }

        ::-webkit-scrollbar-thumb {
            background: var(--bg-tertiary);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--accent-primary);
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

        /* 头部样式 */
        .header {
            margin-bottom: 2.5rem;
            border-bottom: 1px solid var(--bg-tertiary);
            padding-bottom: 1.5rem;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .logo-icon {
            font-size: 2.5rem;
            color: var(--accent-primary);
        }

        .logo h1 {
            font-weight: 700;
            font-size: 2.2rem;
            background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            letter-spacing: -0.5px;
        }

        .tagline {
            font-size: 1.1rem;
            color: var(--text-secondary);
            margin-top: 0.5rem;
            margin-left: 3.5rem;
        }

        /* 主编辑器区域 */
        .editor-container {
            display: flex;
            flex-direction: column;
            gap: 2rem;
            height: calc(100vh - 220px);
        }

        .panel-group {
            display: flex;
            gap: 2rem;
            height: 100%;
        }

        .panel {
            flex: 1;
            background: var(--bg-secondary);
            border-radius: 12px;
            box-shadow: 0 4px 24px rgba(0, 0, 0, 0.15);
            overflow: hidden;
            display: flex;
            flex-direction: column;
        }

        .panel-header {
            padding: 1.2rem 1.5rem;
            background: var(--bg-tertiary);
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }

        .panel-title {
            font-weight: 600;
            font-size: 1.1rem;
            display: flex;
            align-items: center;
            gap: 0.6rem;
        }

        .panel-actions {
            display: flex;
            gap: 0.8rem;
        }

        .btn {
            background: rgba(140, 109, 255, 0.15);
            border: 1px solid var(--accent-primary);
            color: var(--accent-primary);
            padding: 0.6rem 1.2rem;
            border-radius: 8px;
            font-weight: 500;
            font-size: 0.9rem;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn:hover {
            background: rgba(140, 109, 255, 0.25);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(140, 109, 255, 0.25);
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));
            color: white;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #9c81ff, #7d61ff);
            box-shadow: 0 4px 16px rgba(140, 109, 255, 0.4);
        }

        .btn-icon {
            font-size: 1.2rem;
        }

        /* 编辑区 */
        .editor-area {
            flex: 1;
            overflow: hidden;
            position: relative;
        }

        textarea {
            width: 100%;
            height: 100%;
            resize: none;
            padding: 1.5rem;
            background: var(--bg-secondary);
            color: var(--text-primary);
            border: none;
            font-family: 'Fira Code', monospace;
            font-size: 0.95rem;
            line-height: 1.7;
            outline: none;
        }

        textarea:focus {
            box-shadow: inset 0 0 0 2px var(--accent-primary);
        }

        .json-display {
            padding: 1.5rem;
            height: 100%;
            overflow-y: auto;
            white-space: pre;
            font-family: 'Fira Code', monospace;
            font-size: 0.95rem;
            line-height: 1.7;
        }

        /* 格式化后的JSON样式 */
        .json-key {
            color: #ff79c6;
        }

        .json-string {
            color: #50fa7b;
        }

        .json-number {
            color: #bd93f9;
        }

        .json-boolean {
            color: #ffb86c;
        }

        .json-null {
            color: #ff5555;
        }

        /* 工具区 */
        .toolbar {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 1.2rem;
            margin-top: 1rem;
        }

        .tool-card {
            background: var(--bg-tertiary);
            border-radius: 12px;
            padding: 1.5rem;
            transition: var(--transition);
            cursor: pointer;
            border: 1px solid rgba(255, 255, 255, 0.05);
        }

        .tool-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            border-color: var(--accent-primary);
        }

        .tool-card.active {
            border-color: var(--accent-primary);
            box-shadow: inset 0 0 0 1px var(--accent-primary), 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        .tool-icon {
            font-size: 2.5rem;
            color: var(--accent-primary);
            margin-bottom: 1rem;
        }

        .tool-title {
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .tool-desc {
            font-size: 0.9rem;
            color: var(--text-secondary);
            line-height: 1.5;
        }

        /* 响应式设计 */
        @media (max-width: 1000px) {
            .panel-group {
                flex-direction: column;
            }
            
            .panel {
                min-height: 400px;
            }
            
            .toolbar {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .toolbar {
                grid-template-columns: 1fr;
            }
            
            .container {
                padding: 1.5rem;
            }
        }

        /* JSON格式状态指示器 */
        .status-indicator {
            display: inline-block;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            margin-left: 0.5rem;
        }

        .status-valid {
            background-color: var(--success);
            box-shadow: 0 0 8px var(--success);
        }

        .status-invalid {
            background-color: var(--error);
            box-shadow: 0 0 8px var(--error);
        }
        
        .status-empty {
            background-color: var(--warning);
            box-shadow: 0 0 8px var(--warning);
        }
        
        /* 加载动画 */
        .spinner {
            display: inline-block;
            width: 16px;
            height: 16px;
            border: 3px solid rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            border-top-color: var(--accent-primary);
            animation: spin 1s ease-in-out infinite;
            vertical-align: middle;
            margin-right: 5px;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
    
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Fira+Code:wght@400;500;600&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <!-- 网站头部 -->
        <header class="header">
            <div class="logo">
                <div class="logo-icon">
                    <i class="fas fa-database"></i>
                </div>
                <h1>JSONMagic</h1>
            </div>
            <div class="tagline">
                强大的在线JSON处理工具，提供格式化、验证、转换等多种功能
            </div>
        </header>
        
        <!-- 主内容区 -->
        <div class="editor-container">
            <div class="panel-group">
                <!-- 输入区 -->
                <div class="panel">
                    <div class="panel-header">
                        <div class="panel-title">
                            <i class="fas fa-pen"></i>
                            <span>原始JSON</span>
                            <span id="input-status" class="status-indicator status-empty"></span>
                        </div>
                        <div class="panel-actions">
                            <button class="btn" id="beautify-btn">
                                <i class="fas fa-magic"></i>
                                <span>格式化</span>
                            </button>
                            <button class="btn" id="clear-btn">
                                <i class="fas fa-broom"></i>
                                <span>清空</span>
                            </button>
                        </div>
                    </div>
                    <div class="editor-area">
                        <textarea id="json-input" placeholder="在此粘贴或输入JSON数据...">{
  "name": "JSONMagic",
  "description": "强大的JSON处理工具",
  "version": "1.0.0",
  "features": [
    "JSON格式化",
    "JSON压缩",
    "JSON验证",
    "JSON转XML",
    "JSON对比",
    "JSON路径查询"
  ],
  "supportFormats": ["JSON", "YAML", "XML", "CSV"],
  "stats": {
    "users": 2500,
    "rating": 4.9
  },
  "isAwesome": true,
  "upcomingFeatures": null
}</textarea>
                    </div>
                </div>
                
                <!-- 输出区 -->
                <div class="panel">
                    <div class="panel-header">
                        <div class="panel-title">
                            <i class="fas fa-eye"></i>
                            <span>格式化输出</span>
                        </div>
                        <div class="panel-actions">
                            <button class="btn" id="compress-btn">
                                <i class="fas fa-compress-alt"></i>
                                <span>压缩</span>
                            </button>
                            <button class="btn btn-primary" id="copy-btn">
                                <i class="fas fa-copy"></i>
                                <span>复制</span>
                            </button>
                        </div>
                    </div>
                    <div class="editor-area">
                        <pre class="json-display" id="json-output"></pre>
                    </div>
                </div>
            </div>
            
            <!-- 工具栏 -->
            <div class="toolbar">
                <div class="tool-card active">
                    <div class="tool-icon">
                        <i class="fas fa-magic"></i>
                    </div>
                    <h3 class="tool-title">JSON格式化</h3>
                    <p class="tool-desc">美化JSON数据，添加缩进和空格以增强可读性</p>
                </div>
                
                <div class="tool-card">
                    <div class="tool-icon">
                        <i class="fas fa-compress-alt"></i>
                    </div>
                    <h3 class="tool-title">JSON压缩</h3>
                    <p class="tool-desc">删除JSON中所有不必要的空格和换行符</p>
                </div>
                
                <div class="tool-card">
                    <div class="tool-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <h3 class="tool-title">JSON验证</h3>
                    <p class="tool-desc">检查JSON语法和数据结构是否正确</p>
                </div>
                
                <div class="tool-card">
                    <div class="tool-icon">
                        <i class="fas fa-exchange-alt"></i>
                    </div>
                    <h3 class="tool-title">JSON转XML</h3>
                    <p class="tool-desc">将JSON数据转换为XML格式</p>
                </div>
                
                <div class="tool-card">
                    <div class="tool-icon">
                        <i class="fas fa-code-merge"></i>
                    </div>
                    <h3 class="tool-title">JSON对比</h3>
                    <p class="tool-desc">比较两个JSON数据并高亮显示差异</p>
                </div>
                
                <div class="tool-card">
                    <div class="tool-icon">
                        <i class="fas fa-search"></i>
                    </div>
                    <h3 class="tool-title">JSON路径查询</h3>
                    <p class="tool-desc">使用JSONPath查询特定的JSON数据</p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const jsonInput = document.getElementById('json-input');
            const jsonOutput = document.getElementById('json-output');
            const beautifyBtn = document.getElementById('beautify-btn');
            const compressBtn = document.getElementById('compress-btn');
            const clearBtn = document.getElementById('clear-btn');
            const copyBtn = document.getElementById('copy-btn');
            const statusIndicator = document.getElementById('input-status');
            
            // 初始更新输出
            updateOutput();
            
            // 监听输入变化
            jsonInput.addEventListener('input', function() {
                updateStatus();
            });
            
            // 格式化按钮
            beautifyBtn.addEventListener('click', function() {
                beautifyJSON();
            });
            
            // 压缩按钮
            compressBtn.addEventListener('click', function() {
                compressJSON();
            });
            
            // 清空按钮
            clearBtn.addEventListener('click', function() {
                jsonInput.value = '';
                jsonOutput.textContent = '';
                updateStatus();
            });
            
            // 复制按钮
            copyBtn.addEventListener('click', function() {
                const formattedJson = jsonOutput.textContent;
                if (formattedJson.trim() === '') return;
                
                navigator.clipboard.writeText(formattedJson)
                    .then(() => {
                        const originalText = copyBtn.querySelector('span').textContent;
                        copyBtn.innerHTML = '<i class="fas fa-check"></i><span>已复制!</span>';
                        setTimeout(() => {
                            copyBtn.innerHTML = '<i class="fas fa-copy"></i><span>' + originalText + '</span>';
                        }, 1500);
                    })
                    .catch(err => {
                        console.error('复制失败: ', err);
                    });
            });
            
            // 更新状态指示器
            function updateStatus() {
                const jsonStr = jsonInput.value.trim();
                
                if (jsonStr === '') {
                    statusIndicator.className = 'status-indicator status-empty';
                    return;
                }
                
                try {
                    JSON.parse(jsonStr);
                    statusIndicator.className = 'status-indicator status-valid';
                } catch (e) {
                    statusIndicator.className = 'status-indicator status-invalid';
                }
            }
            
            // 更新输出区域
            function updateOutput() {
                const jsonStr = jsonInput.value.trim();
                
                if (jsonStr === '') {
                    jsonOutput.textContent = '';
                    return;
                }
                
                try {
                    const parsedJson = JSON.parse(jsonStr);
                    const formatted = JSON.stringify(parsedJson, null, 2);
                    
                    // 添加语法高亮
                    highlightJSON(formatted);
                } catch (e) {
                    jsonOutput.textContent = '错误: ' + e.message;
                }
            }
            
            // 格式化JSON
            function beautifyJSON() {
                updateOutput();
            }
            
            // 压缩JSON
            function compressJSON() {
                const jsonStr = jsonInput.value.trim();
                
                if (jsonStr === '') {
                    jsonOutput.textContent = '';
                    return;
                }
                
                try {
                    const parsedJson = JSON.parse(jsonStr);
                    const compressed = JSON.stringify(parsedJson);
                    jsonOutput.textContent = compressed;
                } catch (e) {
                    jsonOutput.textContent = '错误: ' + e.message;
                }
            }
            
            // JSON高亮函数
            function highlightJSON(json) {
                // 基本的高亮实现 - 实际项目中会使用更高级的库
                let highlighted = json
                    .replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(\.\d+)?([eE][+-]?\d+)?)/g, function(match) {
                        let cls = '';
                        if (/^"/.test(match)) {
                            if (/:$/.test(match)) {
                                cls = 'json-key';
                            } else {
                                cls = 'json-string';
                            }
                        } else if (/true|false/.test(match)) {
                            cls = 'json-boolean';
                        } else if (/null/.test(match)) {
                            cls = 'json-null';
                        } else if (!isNaN(parseFloat(match))) {
                            cls = 'json-number';
                        }
                        return '<span class="' + cls + '">' + match + '</span>';
                    })
                    .replace(/({|}|[|])/g, '<span style="color: #ff79c6;">$1</span>');
                
                jsonOutput.innerHTML = highlighted;
            }
            
            // 初始状态
            updateStatus();
            highlightJSON(jsonOutput.textContent);
            
            // 工具卡片点击效果
            const toolCards = document.querySelectorAll('.tool-card');
            toolCards.forEach(card => {
                card.addEventListener('click', function() {
                    toolCards.forEach(c => c.classList.remove('active'));
                    this.classList.add('active');
                    
                    // 这里可以添加工具切换的功能
                    const toolName = this.querySelector('.tool-title').textContent;
                    alert(`已切换到${toolName}模式`);
                });
            });
        });
    </script>
</body>
</html>